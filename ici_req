#!/bin/sh

# Copyright (C) 2015 Leif Johansson
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -e
self=`basename $0`

ICI_REQ_CMD=$0
export ICI_REQ_CMD
ICI_REQ_VERSION=1.0

usage ()
{
    echo "\
Usage: ici_req [-V] [-v] [-h] [--bits nnnn] [--ip <ip>] [--dns <fqdn>] [--email <email>] [--uri <uri>] [<fqdn>]

ici_req is a request tool for the ici ca

There are numerous other more or less complicated tools to create
certificate signing requests.  This is an stupidly simple one.

Options:

  -v, --verbose             explain what is being done.
  -h, --help                show this help text and exit.
  -V, --version             show version information and exit.

  --bits nnnn               the size of the generated RSA key, in bits.
                            Default is 4096.
  --dns fqdn                add a fully qualified dns name to the cert
                            subject altname.
  --ip ip                   add a IP address to the cert subject altname.
  --email email             add an email address to the cert subject altname.
  --uri uri                 add a URI to the cert subject altname.
" 1>&2
}

version ()
{
    echo "\
ici ${ICI_REQ_VERSION}

Copyright (C) 2012-2015 Leif Johansson.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Leif Johansson.
" >&2
}

ICI_OPENSSL=openssl
export ICI_OPENSSL

ICI_SUBJECT_DN=""
ICI_ALTNAMES=""
ICI_BITS="4096"


# Command line parsing.
{
    while test $# -gt 0; do
	if [ -z "$ICI_ALTNAMES" ]; then comma=; else comma=,; fi
	case "$1" in
	    --verbose | -v)
		ICI_VERBOSE=y ;;
	    --help | -h )
		usage
		exit 0 ;;
	    --version | -V )
		version
		exit 0 ;;
	    --debug | -d )
		ICI_DEBUG=y ;;
            --bits)
                ICI_BITS="$2"
                shift ;;
            --dns)
                ICI_ALTNAMES="${ICI_ALTNAMES}${comma}DNS:$2"
                fqdn="$2"
                shift ;;
            --ip)
                ICI_ALTNAMES="${ICI_ALTNAMES}${comma}IP:$2"
                shift ;;
            --email)
                ICI_ALTNAMES="${ICI_ALTNAMES}${comma}email:$2"
                shift ;;
            --uri)
                ICI_ALTNAMES="${ICI_ALTNAMES}${comma}URI:$2"
                shift ;;
	    -* )
		echo "$self: unknown option $1" 1>&2
		echo "Try 'ici_req --help' for more information." 1>&2
		exit 1 ;;
	    * )
		break ;;
	esac
        shift
    done

    export ICI_VERBOSE
}

export ICI_SUBJECT_DN ICI_TYPE ICI_ALTNAMES ICI_BITS

_trap ()
{
   err=$?
   if [ $err -ne 0 -a "$1" = "y" ]; then
      if [ -s "$2" ]; then
	  echo "--- cfg ---"
	  cat $2
      fi
      if [ -s "$3" ]; then
	  echo "--- out ---"
	  cat $3
      fi
   fi
   unlink $2
   unlink $3
   exit $err
}

if [ $# -gt 0 ]; then
   fqdn="$1"; shift
   if [ -z "$ICI_ALTNAMES" ]; then comma=; else comma=,; fi
   ICI_ALTNAMES="${ICI_ALTNAMES}${comma}DNS:$fqdn"
fi

if [ -z "$ICI_ALTNAMES" ]; then
   echo "** warning: no altnames provided - did you forget your --dns|--ip|--email|--uri options?"
fi

cfg=`mktemp`
key=`mktemp`
csr=`mktemp`

c=""
sname=""
if [ ! -z "$fqdn" ]; then
   sname="$fqdn"
   c=`echo $fqdn | awk -F. '{ print toupper($NF) }'`
fi

trap '_trap $ICI_DEBUG $cfg $key $csr' EXIT

cat>$cfg<<EOC
[ req ]
default_bits           = $ICI_BITS
req_extensions         = req_extensions
distinguished_name     = req_dn

[ req_dn ]
CN="Common Name"
CN_default="$fqdn"
O="Organization Name"
C="Country Code"
C_default="$c"

[ req_extensions ]
EOC
if [ ! -z "$ICI_ALTNAMES" ]; then
cat>>$cfg<<EOC
subjectAltName          = $ICI_ALTNAMES
EOC
fi

$ICI_OPENSSL req -config $cfg -new -newkey rsa:${ICI_BITS} -reqexts req_extensions -sha256 -keyout $key -nodes -out $csr
if [ -z "$sname" ]; then
   sname=`$ICI_OPENSSL req -noout -subject < $csr |  sed 's/subject=//' | sha1sum`
fi
test -s $key -a -s $csr && mv $key "$sname.key" && mv $csr "$sname.csr"
echo "Successfully generated $sname.key and $sname.csr"
